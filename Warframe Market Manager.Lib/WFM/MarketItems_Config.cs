// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Warframe_Market_Manager.Lib.WFM;
//
//    var marketItemData = MarketItemData.FromJson(jsonString);

namespace Warframe_Market_Manager.Lib.WFM
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class MarketItems_Config
    {
        [JsonProperty("payload")]
        public Payload Payload { get; set; }
    }

    public partial class Payload
    {
        [JsonProperty("items")]
        public MarketItem[] MarketItems { get; set; }
    }

    public partial class MarketItem
    {
        [JsonProperty("thumb")]
        public string Thumb { get; set; }

        [JsonProperty("item_name")]
        public string ItemName { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("url_name")]
        public string UrlName { get; set; }
    }

    public partial class MarketItems_Config
    {
        public static MarketItems_Config FromJson(string json) => JsonConvert.DeserializeObject<MarketItems_Config>(json, Warframe_Market_Manager.Lib.WFM.MarketItems_Converter.Settings);
    }

    public static class MarketItems_Serialize
    {
        public static string ToJson(this MarketItems_Config self) => JsonConvert.SerializeObject(self, Warframe_Market_Manager.Lib.WFM.MarketItems_Converter.Settings);
    }

    internal static class MarketItems_Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}